
import os
import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, CommandHandler, filters
from dotenv import load_dotenv

load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

openai.api_key = OPENAI_API_KEY

async def get_chatgpt_response(message):
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "–¢—ã ‚Äî –Ω–µ–π—Ä–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ä–∏–µ–ª—Ç–æ—Ä–∞ –ù–∞—Ç–∞–ª—å–∏. –û—Ç–≤–µ—á–∞–π —Ç–µ–ø–ª–æ, –ø–æ–Ω—è—Ç–Ω–æ, –∫–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏. –ü–æ–º–æ–≥–∞–π –≤–µ—Å—Ç–∏ –∫–∞–Ω–∞–ª –Ω–∞ –î–∑–µ–Ω–µ –∏ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–π, –∫–∞–∫ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤."},
            {"role": "user", "content": message}
        ]
    )
    return response.choices[0].message.content.strip()

# –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –î–∑–µ–Ω–µ. –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å üí¨")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    reply_text = await get_chatgpt_response(user_message)
    await update.message.reply_text(reply_text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()
